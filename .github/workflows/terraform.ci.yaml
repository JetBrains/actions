---
name: TerraformPullRequest

on:
  workflow_call:
  workflow_dispatch:
  pull_request:

jobs:
  fmt:
    if: github.repository != 'jetbrains/actions'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Configure Terraform'
        uses: hashicorp/setup-terraform@v3
      - name: 'Terraform Format'
        run: terraform fmt -check -recursive

  validate:
    if: github.repository != 'jetbrains/actions'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Configure Terraform'
        uses: hashicorp/setup-terraform@v3
      - name: 'Terraform Init'
        run: terraform init
      - name: 'Terraform Validate'
        run: terraform validate -no-color

  docs:
    if: github.repository != 'jetbrains/actions'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: 'Update module usage docs and push any changes back to PR branch'
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          git-commit-message: "terraform-docs: Update module usage"
          git-push: "true"
          output-file: README.md
          output-method: inject
          find-dir: .

  sec:
    if: github.repository != 'jetbrains/actions'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Terraform security scan'
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          tfsec_args: --concise-output
          soft_fail: false
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Terraform pr commenter'
        uses: aquasecurity/tfsec-pr-commenter-action@v1.3.1
        with:
          tfsec_args: --concise-output
          github_token: ${{ secrets.GITHUB_TOKEN }}